{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\clones\\\\Project3-Uptoyou-11-16\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\clones\\\\Project3-Uptoyou-11-16\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\clones\\\\Project3-Uptoyou-11-16\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\clones\\\\Project3-Uptoyou-11-16\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\clones\\\\Project3-Uptoyou-11-16\\\\Project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\clones\\\\Project3-Uptoyou-11-16\\\\Project-3\\\\client\\\\src\\\\components\\\\Food.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // Connect comes with Provider\n\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { findFood } from '../actions/postActions';\n\nvar Restaurants =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Restaurants, _Component);\n\n  function Restaurants() {\n    _classCallCheck(this, Restaurants);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Restaurants).apply(this, arguments));\n  }\n\n  _createClass(Restaurants, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {// calls the action\n      // this.props.findFood();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      // When it recieves a new property from the state this will run\n      // this.props.findFood();\n      if (nextProps.restaurants) {\n        this.props.restaurants.unshift(nextProps.restaurants);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.restaurants);\n      var foodItems = this.props.restaurants.map(function (restaurant) {\n        return React.createElement(\"div\", {\n          key: restaurant.restaurant.id,\n          className: \"food-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"meta\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"photo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: _.get(restaurant, ['restaurant', 'featured_image'], 'No image.'),\n          alt: \" \",\n          height: \"100px\",\n          width: \"162px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })), React.createElement(\"ul\", {\n          class: \"details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          class: \"author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, restaurant.restaurant.cuisines))), React.createElement(\"div\", {\n          class: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, restaurant.restaurant.name), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, restaurant.restaurant.location.locality), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, _.get(restaurant, ['restaurant', 'location', 'address'], 'No address.')), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"COST FOR TWO: $\", restaurant.restaurant.average_cost_for_two), React.createElement(\"p\", {\n          class: \"read-more\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: restaurant.restaurant.menu_url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"View Menu\"))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Restaurant Options\"), foodItems);\n    }\n  }]);\n\n  return Restaurants;\n}(Component);\n\nRestaurants.propTypes = {\n  findFood: PropTypes.func.isRequired,\n  restaurants: PropTypes.array.isRequired // Have to get the new items from the state\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    restaurants: state.restaurants.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findFood: findFood\n})(Restaurants);","map":{"version":3,"sources":["C:\\Users\\chami\\Desktop\\Redux\\clones\\Project3-Uptoyou-11-16\\Project-3\\client\\src\\components\\Food.js"],"names":["React","Component","PropTypes","connect","_","findFood","Restaurants","nextProps","restaurants","props","unshift","console","log","foodItems","map","restaurant","id","get","cuisines","name","location","locality","average_cost_for_two","menu_url","propTypes","func","isRequired","array","mapStateToProps","state","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n// Connect comes with Provider\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { findFood } from '../actions/postActions'\r\n\r\nclass Restaurants extends Component {\r\n\r\n    componentWillMount() {\r\n        // calls the action\r\n        // this.props.findFood();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // When it recieves a new property from the state this will run\r\n        // this.props.findFood();\r\n        if (nextProps.restaurants) {\r\n            this.props.restaurants.unshift(nextProps.restaurants);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.restaurants);\r\n        const foodItems = this.props.restaurants.map(restaurant => (\r\n            <div key={restaurant.restaurant.id} className=\"food-card\">\r\n                <div class=\"meta\" >\r\n                    <div class=\"photo\"><img src={_.get(restaurant, ['restaurant', 'featured_image'], 'No image.')} alt=' ' height='100px' width='162px'></img>\r\n                    </div>\r\n                    {/* <span><img src={restaurant.restaurant.photos_url} alt=' ' height='100px' width='162px'></img></span> */}\r\n                    <ul class=\"details\">\r\n                        <li class=\"author\">{restaurant.restaurant.cuisines}</li>\r\n                    </ul>\r\n                    {/* <div class=\"author\" className=\"restaurantRating\">\r\n                        <p>{restaurant.restaurant.user_rating.aggregate_rating}</p>\r\n                        <p>{restaurant.restaurant.user_rating.votes} votes</p>\r\n                    </div> */}\r\n                </div>\r\n                <div class=\"description\">\r\n                    <h1>{restaurant.restaurant.name}</h1>\r\n                    <h2>{restaurant.restaurant.location.locality}</h2>\r\n                    <h2>{_.get(restaurant, ['restaurant', 'location', 'address'], 'No address.')}</h2>\r\n                    <h2>COST FOR TWO: ${restaurant.restaurant.average_cost_for_two}</h2>\r\n                    {/* <p>CUISINES: {restaurant.restaurant.cuisines}</p> */}\r\n                    {/* <p>COST FOR TWO: ${restaurant.restaurant.average_cost_for_two}</p> */}\r\n                    <p class=\"read-more\">\r\n                        <a href={restaurant.restaurant.menu_url} >View Menu</a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        ));\r\n        return (\r\n            <div>\r\n                <h1>Restaurant Options</h1>\r\n                {foodItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRestaurants.propTypes = {\r\n    findFood: PropTypes.func.isRequired,\r\n    restaurants: PropTypes.array.isRequired\r\n}\r\n\r\n// Have to get the new items from the state\r\nconst mapStateToProps = state => ({\r\n    restaurants: state.restaurants.items\r\n});\r\n\r\nexport default connect(mapStateToProps, { findFood })(Restaurants);"]},"metadata":{},"sourceType":"module"}