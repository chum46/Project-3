{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\Project3-wip 11-16\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n// Evaluates any actions that are committed such as \n// fetching posts or creating new posts\nimport { FETCH_POSTS, NEW_POST } from '../actions/types'; // Initial state is an object \n\nvar initialState = {\n  // items array that represents the posts that come in from our action\n  items: [],\n  // item object to represent the single posts that we add when we get\n  // the response back\n  item: {} // Function that evaluates what type we're dealing with. Takes in two\n  // things: the state which is equal to our initial state and the action\n  // which includes a type (what we are evaluating). Switch is a common way\n\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  // action is an object with a type (NEW_POST or Fetch.. etc)\n  // can add other stuff as well but has to have a type\n  switch (action.type) {\n    case FETCH_POSTS:\n      // console.log('reducer');\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    case NEW_POST:\n      return _objectSpread({}, state, {\n        item: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\chami\\Desktop\\Redux\\Project3-wip 11-16\\client\\src\\reducers\\postReducer.js"],"names":["FETCH_POSTS","NEW_POST","initialState","items","item","state","action","type","payload"],"mappings":";AAAA;AACA;AAEA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,kBAAtC,C,CAEA;;AACA,IAAMC,YAAY,GAAG;AACjB;AACAC,EAAAA,KAAK,EAAE,EAFU;AAGjB;AACA;AACAC,EAAAA,IAAI,EAAE,EALW,CAQrB;AACA;AACA;;AAVqB,CAArB;AAWA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAClD;AACA;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAL;AACI;AACA,+BAEOK,KAFP;AAGIF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAHlB;;AAKJ,SAAKP,QAAL;AACI,+BACOI,KADP;AAEID,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAFjB;;AAIJ;AACI,aAAOH,KAAP;AAdR;AAgBH","sourcesContent":["// Evaluates any actions that are committed such as \r\n// fetching posts or creating new posts\r\n\r\nimport { FETCH_POSTS, NEW_POST } from '../actions/types';\r\n\r\n// Initial state is an object \r\nconst initialState = {\r\n    // items array that represents the posts that come in from our action\r\n    items: [],\r\n    // item object to represent the single posts that we add when we get\r\n    // the response back\r\n    item: {}\r\n}\r\n\r\n// Function that evaluates what type we're dealing with. Takes in two\r\n// things: the state which is equal to our initial state and the action\r\n// which includes a type (what we are evaluating). Switch is a common way\r\nexport default function(state = initialState, action) {\r\n    // action is an object with a type (NEW_POST or Fetch.. etc)\r\n    // can add other stuff as well but has to have a type\r\n    switch(action.type) {\r\n        case FETCH_POSTS:\r\n            // console.log('reducer');\r\n            return {\r\n                // spread operator \"...\" sends current state\r\n                ...state,\r\n                items: action.payload\r\n            };\r\n        case NEW_POST:\r\n            return {\r\n                ...state, \r\n                item: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}