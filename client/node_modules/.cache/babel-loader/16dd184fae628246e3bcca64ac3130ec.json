{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\Project3-wip 11-16\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\Project3-wip 11-16\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\Project3-wip 11-16\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\Project3-wip 11-16\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\Project3-wip 11-16\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\chami\\\\Desktop\\\\Redux\\\\Project3-wip 11-16\\\\client\\\\src\\\\components\\\\Events.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // Connect comes with Provider\n\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { findEvents } from '../actions/postActions';\n\nvar Events =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Events, _Component);\n\n  function Events() {\n    _classCallCheck(this, Events);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Events).apply(this, arguments));\n  }\n\n  _createClass(Events, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // calls the action\n      this.props.findEvents();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      // When it recieves a new property from the state this will run\n      // this.props.findEvents();\n      if (nextProps.events) {\n        this.props.events.unshift(nextProps.events);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.events); // https://lodash.com/docs/#get this is how we can pull from the props.events object\n\n      var eventItems = this.props.events.map(function (event) {\n        return React.createElement(\"div\", {\n          key: event.id,\n          class: \"\",\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"event-card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"meta\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"photo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: _.get(event, ['images', 0, 'url'], 'No image.'),\n          alt: \" \",\n          height: \"100px\",\n          width: \"162px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })), React.createElement(\"ul\", {\n          class: \"details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          class: \"author\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, _.get(event, ['classifications', 0, 'genre', 'name'], 'No genre.'), \" / \", _.get(event, ['classifications', 0, 'subGenre', 'name'], 'No subGenre.')))), React.createElement(\"div\", {\n          class: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, event.name), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, event._embedded.venues[0].name, \" - \", event._embedded.venues[0].city.name, \", \", event._embedded.venues[0].state.name), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, event.dates.start.localDate, \" \", event.dates.start.localTime), React.createElement(\"p\", {\n          class: \"read-more\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"{event.url}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"See Tickets\")))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Event Options\"), eventItems);\n    }\n  }]);\n\n  return Events;\n}(Component);\n\nEvents.propTypes = {\n  findEvents: PropTypes.func.isRequired,\n  events: PropTypes.array.isRequired // Have to get the new items from the state\n\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    events: state.events.items\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findEvents: findEvents\n})(Events);","map":{"version":3,"sources":["C:\\Users\\chami\\Desktop\\Redux\\Project3-wip 11-16\\client\\src\\components\\Events.js"],"names":["React","Component","PropTypes","connect","_","findEvents","Events","props","nextProps","events","unshift","console","log","eventItems","map","event","id","get","name","_embedded","venues","city","state","dates","start","localDate","localTime","propTypes","func","isRequired","array","mapStateToProps","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n// Connect comes with Provider\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport { findEvents } from '../actions/postActions'\r\n\r\nclass Events extends Component {\r\n\r\n    componentWillMount() {\r\n        // calls the action\r\n        this.props.findEvents();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // When it recieves a new property from the state this will run\r\n        // this.props.findEvents();\r\n        if (nextProps.events) {\r\n            this.props.events.unshift(nextProps.events);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.events);\r\n        // https://lodash.com/docs/#get this is how we can pull from the props.events object\r\n        const eventItems = this.props.events.map(event => (\r\n            \r\n            <div key={event.id} class=\"\" className=\"\">\r\n\r\n\r\n                <div class=\"event-card\">\r\n                    <div class=\"meta\">\r\n                        <div class=\"photo\"><img src={_.get(event, ['images', 0, 'url'], 'No image.')} alt=' ' height='100px' width='162px'></img></div>\r\n                        <ul class=\"details\">\r\n                            <li class=\"author\">{_.get(event, ['classifications', 0, 'genre', 'name'], 'No genre.')} / {_.get(event, ['classifications', 0, 'subGenre', 'name'], 'No subGenre.')}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"description\">\r\n                        <h1>{event.name}</h1>\r\n                        <h2>{event._embedded.venues[0].name} - {event._embedded.venues[0].city.name}, {event._embedded.venues[0].state.name}</h2>\r\n                        <h2>{event.dates.start.localDate} {event.dates.start.localTime}</h2>\r\n                        <p class=\"read-more\">\r\n                            <a href=\"{event.url}\">See Tickets</a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <span><img src={_.get(event, ['images', 0, 'url'], 'No image.')} alt=' ' height='100px' width='162px'></img></span>\r\n                <h3>{event.name}</h3>\r\n                <p>{event._embedded.venues[0].name} - {event._embedded.venues[0].city.name}, {event._embedded.venues[0].state.name}</p>\r\n                <p>{event.dates.start.localDate}</p>\r\n                <p>{event.dates.start.localTime}</p>\r\n                <hr />\r\n                <p>{_.get(event, ['classifications', 0, 'genre', 'name'], 'No genre.')} / {_.get(event, ['classifications', 0, 'subGenre', 'name'], 'No subGenre.')}</p>\r\n                <hr />\r\n                <a href={event.url} className=\"button\">SEE TICKETS</a> */}\r\n                \r\n            </div>\r\n        ));\r\n        return (\r\n            <div>\r\n                <h1>Event Options</h1>\r\n                {eventItems}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nEvents.propTypes = {\r\n    findEvents: PropTypes.func.isRequired,\r\n    events: PropTypes.array.isRequired\r\n}\r\n\r\n// Have to get the new items from the state\r\nconst mapStateToProps = state => ({\r\n    events: state.events.items\r\n});\r\n\r\nexport default connect(mapStateToProps, { findEvents })(Events);"]},"metadata":{},"sourceType":"module"}